{
    "name": "core-ac-uk-connector",
    "version": "2.0.0",
    "description": "You can use the CORE API to access the resources harvested and enriched by CORE.\nIf you encounter any problems with the API, please report them to us [/contact].\n\nOVERVIEW\nThe API is organised by resource type. The resources are articles, journals and \nrepositories and are represented using JSON data format. Furthermore, each\nresource has a list of methods. The API also provides two global methods for\naccessing all resources at once.\n\nRESPONSE FORMAT\nResponse for each query contains two fields: status and data. In case of an\nerror status, the data field is empty. The data field contains a single object\nin case the request is for a specific identifier (e.g. CORE ID, CORE repository\nID, etc.), or contains a list of objects, for example for search queries. In\ncase of batch requests, the response is an array of objects, each of which\ncontains its own status and data fields. For search queries the response\ncontains an additional field totalHits, which is the total number of items which\nmatch the search criteria.\n\nSEARCH QUERY SYNTAX\nComplex search queries can be used in all of the API search methods. The query\ncan be a simple string or it can be built using terms and operators described in\nElasticsearch documentation\n[http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax]\n. The usable field names are title, description, fullText, authors, publisher, \nrepositories.id, repositories.name, doi, oai, identifiers (which is a list of\narticle identifiers including OAI, URL, etc.), language.name and year. Some\nexample queries:\n\n * title:psychology and language.name:English\n   \n   \n * repositories.id:86 AND year:2014\n   \n   \n * identifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR\n   identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\n   \n   \n * doi:\"10.1186/1471-2458-6-309\"\n   \n   \n\nRETRIEVING THE LATEST ARTICLES\nYou can retrieve the harvested items since specific dates using the following\nqueries:\n\n * repositoryDocument.metadataUpdated:>2017-02-10\n   \n   \n * repositoryDocument.metadataUpdated:>2017-03-01 AND\n   repositoryDocument.metadataUpdated:\n   \n   \n\nSORT ORDER\nFor search queries, the results are ordered by relevance score. For batch\nrequests, the results are retrieved in the order of the requests.\n\nPARAMETERS\nThe API methods allow different parameters to be passed. Additionally, there is\nan API key parameter which is common to all API methods. For all API methods the\nAPI key can be provided either as a query parameter or in the request header. If\nthe API key is not provided, the API will return HTTP 401 error. You can\nregister for an API key here [/services#api].\n\nAPI METHODS",
    "main": "component.json",
    "dependencies": {
        "elasticio-node": "0.0.9",
        "elasticio-sailor-nodejs": "^2.2.1",
        "swagger-client": "^3.8.22"
    },
    "author": {
        "name": "Deutsche Telekom AG"
    },
    "license": "Apache-2.0"
}